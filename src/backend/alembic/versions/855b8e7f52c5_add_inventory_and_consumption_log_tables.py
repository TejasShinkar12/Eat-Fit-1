"""Add inventory and consumption_log tables

Revision ID: 855b8e7f52c5
Revises: 1b937f4fa4b7
Create Date: 2025-06-24 21:55:12.834702

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "855b8e7f52c5"
down_revision: Union[str, None] = "1b937f4fa4b7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "inventory",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("calories_per_serving", sa.Float(), nullable=True),
        sa.Column("protein_g_per_serving", sa.Float(), nullable=True),
        sa.Column("carbs_g_per_serving", sa.Float(), nullable=True),
        sa.Column("fats_g_per_serving", sa.Float(), nullable=True),
        sa.Column("serving_size_unit", sa.String(), nullable=True),
        sa.Column("expiry_date", sa.Date(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("added_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "consumption_log",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("inventory_item_id", sa.UUID(), nullable=True),
        sa.Column("item_name", sa.String(), nullable=False),
        sa.Column("quantity_consumed", sa.Float(), nullable=False),
        sa.Column("calories_consumed", sa.Float(), nullable=False),
        sa.Column("protein_consumed_g", sa.Float(), nullable=False),
        sa.Column("carbs_consumed_g", sa.Float(), nullable=False),
        sa.Column("fats_consumed_g", sa.Float(), nullable=False),
        sa.Column("consumed_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["inventory_item_id"],
            ["inventory.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "users", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "users", "created_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.drop_table("consumption_log")
    op.drop_table("inventory")
    # ### end Alembic commands ###
